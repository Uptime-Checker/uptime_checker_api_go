//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var MonitorAlarmPolicy = newMonitorAlarmPolicyTable("public", "monitor_alarm_policy", "")

type monitorAlarmPolicyTable struct {
	postgres.Table

	//Columns
	ID             postgres.ColumnInteger
	Reason         postgres.ColumnString
	Threshold      postgres.ColumnInteger
	MonitorID      postgres.ColumnInteger
	OrganizationID postgres.ColumnInteger
	InsertedAt     postgres.ColumnTimestamp
	UpdatedAt      postgres.ColumnTimestamp

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type MonitorAlarmPolicyTable struct {
	monitorAlarmPolicyTable

	EXCLUDED monitorAlarmPolicyTable
}

// AS creates new MonitorAlarmPolicyTable with assigned alias
func (a MonitorAlarmPolicyTable) AS(alias string) *MonitorAlarmPolicyTable {
	return newMonitorAlarmPolicyTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new MonitorAlarmPolicyTable with assigned schema name
func (a MonitorAlarmPolicyTable) FromSchema(schemaName string) *MonitorAlarmPolicyTable {
	return newMonitorAlarmPolicyTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new MonitorAlarmPolicyTable with assigned table prefix
func (a MonitorAlarmPolicyTable) WithPrefix(prefix string) *MonitorAlarmPolicyTable {
	return newMonitorAlarmPolicyTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new MonitorAlarmPolicyTable with assigned table suffix
func (a MonitorAlarmPolicyTable) WithSuffix(suffix string) *MonitorAlarmPolicyTable {
	return newMonitorAlarmPolicyTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newMonitorAlarmPolicyTable(schemaName, tableName, alias string) *MonitorAlarmPolicyTable {
	return &MonitorAlarmPolicyTable{
		monitorAlarmPolicyTable: newMonitorAlarmPolicyTableImpl(schemaName, tableName, alias),
		EXCLUDED:                newMonitorAlarmPolicyTableImpl("", "excluded", ""),
	}
}

func newMonitorAlarmPolicyTableImpl(schemaName, tableName, alias string) monitorAlarmPolicyTable {
	var (
		IDColumn             = postgres.IntegerColumn("id")
		ReasonColumn         = postgres.StringColumn("reason")
		ThresholdColumn      = postgres.IntegerColumn("threshold")
		MonitorIDColumn      = postgres.IntegerColumn("monitor_id")
		OrganizationIDColumn = postgres.IntegerColumn("organization_id")
		InsertedAtColumn     = postgres.TimestampColumn("inserted_at")
		UpdatedAtColumn      = postgres.TimestampColumn("updated_at")
		allColumns           = postgres.ColumnList{IDColumn, ReasonColumn, ThresholdColumn, MonitorIDColumn, OrganizationIDColumn, InsertedAtColumn, UpdatedAtColumn}
		mutableColumns       = postgres.ColumnList{ReasonColumn, ThresholdColumn, MonitorIDColumn, OrganizationIDColumn, InsertedAtColumn, UpdatedAtColumn}
	)

	return monitorAlarmPolicyTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:             IDColumn,
		Reason:         ReasonColumn,
		Threshold:      ThresholdColumn,
		MonitorID:      MonitorIDColumn,
		OrganizationID: OrganizationIDColumn,
		InsertedAt:     InsertedAtColumn,
		UpdatedAt:      UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
